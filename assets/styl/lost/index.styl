// Lost Grid v0.0.1 - https://github.com/corysimmons/lost

gutter = 25px
breakpoint = 1000px
old = false
rtl = false

edit(bg = blue)
  *
    background: rgba(bg, 10%)

cf()
  *zoom: 1
  &:before, &:after
    content: ''
    display: table
  &:after
    clear: both

align(direction = both)
  if old
    position: relative
    > *
      position: absolute
      transform-style: preserve-3d
      if (direction == horizontal) or (direction == h)
        left: 50%
        transform: translateX(-50%)
      else if (direction == vertical) or (direction == v)
        top: 50%
        transform: translateY(-50%)
      else if (direction == reset)
        top: auto
        left: auto
        transform: translate(0, 0)
      else
        top: 50%
        left: 50%
        transform: translate(-50%, -50%)
  else
    display: flex
    if (direction == horizontal) or (direction == h)
      justify-content: center
    else if (direction == vertical) or (direction == v)
      align-items: center
    else if (direction == reset)
      justify-content: inherit
      align-items: inherit
    else
      justify-content: center
      align-items: center

center(pad = gutter, mw = breakpoint)
  max-width: mw
  margin-right: auto
  margin-left: auto
  if old
    pad = pad * .1
    padding-left: (pad)%
    padding-right: (pad)%
  else
    padding-left: pad
    padding-right: pad

row(ratios = 1, gut = gutter)
  cf()
  if old
    gut = gut * .1
    if gut > 0
      margin-left: -(_get-column(ratios, gut)[1])%
      margin-right: -(_get-column(ratios, gut)[1])%
  else
    margin-left: -(gut / 2)
    margin-right: -(gut / 2)

column(ratios = 1, gut = gutter)
  if rtl
    float: right
  else
    float: left
  if old
    gut = gut * .1
    if gut > 0
      width: (_get-column(ratios, gut)[0])%
      margin-left: (_get-column(ratios, gut)[1])%
      margin-right: (_get-column(ratios, gut)[1])%
    if gut is 0
      width: (100% * ratios)
  else
    ratios = ratios[0]
    if gut > 0
      width: s('calc(100% * %s - %s)', ratios, gut)
      margin-left: (gut / 2)
      margin-right: (gut / 2)
    if gut is 0
      width: s('calc(100% * %s)', ratios)

offset(ratios = false, gut = gutter)
  if old
    gut = gut * .1
    if gut > 0
      if ratios > 0
        margin-left: ((_get-column(ratios, gut)[0]) + ((_get-column(ratios, gut)[1]) * 3))%
      if ratios < 0
        margin-right: (-1 * ((_get-column(ratios, gut)[0]) + (_get-column(ratios, gut)[1])))%
    if gut is 0
      if ratios > 0
        margin-left: (100% * ratios)
      if ratios < 0
        margin-right: (-100% * ratios)
  else
    ratios = ratios[0]
    if gut > 0
      if ratios > 0
        margin-left: s('calc(100% * %s + (%s / 2))', ratios, gut)
      if ratios < 0
        margin-right: s('calc(-100% * %s + (%s / 2))', ratios, gut)
    if gut is 0
      if ratios > 0
        margin-left: s('calc(100% * %s)', ratios)
      if ratios < 0
        margin-right: s('calc(-100% * %s)', ratios)

shift(ratios = false, gut = gutter)
  position: relative
  if old
    left: (100% * ratios)
  else
    ratios = ratios[0]
    left: s('calc(100% * %s)', ratios)

// Private
_reverse(list)
  result = ()
  for item in list
    prepend(result, item)
  return result

_get-column(ratios = 1, gut = gutter)
  ratios = _reverse(ratios)
  width = 100
  for ratio in ratios
    gut = gut / width * 100
    width = 100 * ratio - gut
  return width (gut / 2)

.center
  center()

.row
  row()